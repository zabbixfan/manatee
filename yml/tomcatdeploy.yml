---
- name: tomcat app deploy
 # become: True
  gather_facts: False
  vars:
    tomcat_root: 
    war_new: "{{tomcat_root}}/newfile"
    war_old: "{{tomcat_root}}/oldfile"
    script_path: "{{tomcat_root}}/script"
    module:
    host: 
    url:
  hosts: '{{ host }}'
#  environment:
#    JAVA_HOME: /usr/local/java
  tasks:
    - name: Create script folder
      file: path={{ item }} state=directory
      with_items:
        - '{{script_path}}'
        - '{{war_old}}'
        - '{{war_new}}'
    - name: Download app
      get_url: url={{ url }} dest={{ war_new }}/{{ module }}.war
    - name: Copy tomcat script
      template: src=/geelyapp/opsdev/web/yml/templates/tomcat.j2 dest={{ script_path }}/tomcat{{ module }}.sh mode=0755
    - name: Stop tomcat
      action: shell {{ script_path }}/tomcat{{ module }}.sh stop
      tags: stop
    - name: Move old app to temp folder
      shell: removes={{ tomcat_root }}/webapps/{{ module }}.war mv {{ tomcat_root }}/webapps/{{ module }}.war {{ war_old }} && rm -rf {{ tomcat_root }}/webapps/{{ module }}*
    - name: Clean work directory
      shell: rm -rf {{ tomcat_root }}/work/*
      ignore_errors: yes
    - name: Move new app to work path
      shell: mv {{ war_new }}/{{ module }}.war {{ tomcat_root }}/webapps/
    - name: Start tomcat.
      shell: source /etc/profile && nohup {{ script_path }}/tomcat{{ module }}.sh start &
    #  register: a
    #  tags: st1
    #- name: show
    #  debug: var=a
      #shell: nohup /geelyapp/tomcat-ansible/bin/catalina.sh start & 
      #service: name=tomcat state=started enabled=yes
      #shell: /etc/init.d/tomcat start
